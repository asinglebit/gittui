name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build release
        run: |
          cargo build --release --all-features
          # Rename binaries per OS
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv target/release/guitar target/release/guitar-windows.exe
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            mv target/release/guitar target/release/guitar-macos
          else
            mv target/release/guitar target/release/guitar-linux
          fi

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binary
          path: target/release/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts from all OS
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
